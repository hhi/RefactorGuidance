
class ExtractMethodMarkerCases
{
    public void WriteMarkers()
    {
        int a = 4;
        int b;
        int c;
        int d;
        int e;
        int f;
        int g;

        b = a + 2;

        c++;            // extract start
        ++f;            // extract end

        d = (b>c) ? b : c;

        g += 3;
    }

    public void ReadWriteMarkers()
    {
        int a;
        int b;

        a = b;
    }

    public void ReadTertiaryMarkers()
    {
        int d, b, c;

        d = (b>c) ? b : c;
    }

    public void ReadVariableInOtherVariable()
    {
        int a = 0;
        int b = 1;

        a = b;
    }

    // Case: value is read from variable and passed on to another method
    public void PassingVariablesToMethods()
    {
        int a = 0;
        passOn(a);
    }

     public void PassingNVariablesToMethods()
     {
        int a,b,c;
        passOn(a,b);
     }

    private void passOn(int v)
    {
        int c = 1;
        c = c+v;
    }

    private void passOn(int v, int w)
    {
        int c = 1;
        c = c+v+w;
    }

    private void multipleReads()
    {
        int a;
        int b;
        int c;

        a=4;
        b=a;    // : read BEFORE a

        c=b+a;  // extract start    : read WITHIN b, a
        c=0;    // extract stop

        a=c;    // : read AFTER c
    }

    private void noReads()
    {
        int a;
        a = b + 1;
    }

    private void WriteVariableBasedOnOwnValue()
    {
        int a = 0;
        a = a + 6;
    }

    private void ReadingOfTertiaryWriteToSame()
    {
        int b = 6;

        b = (b > 10) ? 0 : b;
    }

    private void ReadingOfUnaryOperation()
    {
        int c = 9;

        c++;
    }

    public void LiveMarker()
    {
    }
}